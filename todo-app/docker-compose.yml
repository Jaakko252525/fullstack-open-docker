

services:

  app:
    image: hello-front
    build:
      context: ./todo-frontend/ # The context will pick this directory as the "build context"
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 5173:5173
    container_name: hello-front # This will name the container hello-front-dev


  debug-helper:
    image: busybox



  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
    container_name: mongo


  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data
    container_name: redis



  backend:
    image: backend
    build:
      context: ./todo-backend/ # The context will pick this directory as the "build context"
    volumes:
      - ./todo-backend/:/usr/src/app
    ports:
      - 3000:3000
    container_name: backend # This will name the container hello-front-dev
    environment: 
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@27017:3456/the_database



  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: nginx
    depends_on:
      - app # wait for the frontend container to be started
      - backend

