


version: '3.8'

services:
  mongo:
    image: mongo
    ports:
      - 3456:27017

    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./mongo_data:/data/db

  some-redis:
    image: redis:alpine
    container_name: some-rediss
    restart: unless-stopped
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./redis_data:/data

  backend:
    image: hello-backend-dev
    build:
      context: . # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./:/usr/src/app
    ports:
      - 3000:3000
    container_name: hello-backend-dev # This will name the container hello-front-dev
    environment: 
      - REDIS_URL=redis://127.0.0.1:6379
      - MONGO_URL=mongodb://the_username:the_password@localhost:27017/the_database


  nginx:
    image: nginx:1.20.1

    volumes:
      - ../../nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - backend # wait for the frontend container to be started


